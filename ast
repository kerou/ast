#!/bin/bash
verbose=0;
all=0;
keep=0;
includedirectory="/usr/local/"
inputfile="invalidfile"
inputfileset=0;
outputfile="libout.a"
outputfileset=0;

while [[ $# > 0 && $1 == * ]]; do
    case "$1" in
	-h|--help|-\?) cat ~/bin/astres/ast_help_file; exit 0;;
	-v|--version) echo "ast 0.1"; exit 0;;
	--clean) if ((inputfileset == 0)); then
	    echo "ast: No file to clean specified";
	    exit 1
	    else
	    outputfile=`echo $inputfile | sed s/.ast//`; rm $outputfile.tab.cpp $outputfile.tab.hpp $outputfile.tab.o $outputfile.y $outputfile.l $outputfile.yy.cpp $outputfile.cpp $outputfile.o $outputfile.yy.o $outputfile.bisonreport Matchedfile.txt -f; exit 0
	fi ;;
	-V|--verbose) verbose=1; echo "No verbosity to be had here"; shift;;
	-B|--directory) if (($# > 1)); then
	    includedirectory=$2; shift 2
	    else
	    echo "$1 requires an argument" 1>&2
	    exit 1
	    fi ;;
	-a|--compile-all) all=1; shift;;
	-k|--keep-int) keep=1; shift;;
	-o) if (($# > 1)); then
	    outputfile=$2; outputfileset=1;  shift 2
	    else 
	    echo "-o requires an argument" 1>&2
	    exit 1
	    fi ;;
	--) shift; break;;
	-*) echo "invalid option: $1" 1>&2; exit 1;;
	*) inputfile=$1; inputfileset=1; shift;;
    esac
done
if ((inputfileset == 0)); then
    echo "ast: No input file"
else
    if ((outputfileset == 0)); then
	outputfile=`echo $inputfile | sed s/.ast//`
    fi
    astbin $inputfile $includedirectory $outputfile
    if ((all == 1)); then
	bison -d --report-file=$outputfile.bisonreport -v -o $outputfile.tab.cpp $outputfile.y
	flex -o$outputfile.yy.cpp $outputfile.l
	g++ -c -std=c++0x $outputfile.cpp -o $outputfile.o
	g++ -c -std=c++0x $outputfile.tab.cpp
	g++ -c -std=c++0x $outputfile.yy.cpp
	rm lib$outputfile.a
	ar cq lib$outputfile.a $outputfile.o $outputfile.tab.o $outputfile.yy.o
	if ((keep == 0)); then
	    rm $outputfile.tab.cpp $outputfile.tab.hpp $outputfile.tab.o $outputfile.y $outputfile.l $outputfile.yy.cpp $outputfile.cpp $outputfile.o $outputfile.yy.o
	fi
    fi
fi

exit